<?php
	//函数参数
	//形参：形式参数，不具有实际意义的参数，是在函数定义时使用的参数
	//实参：实际参数，具有实际数据意义的参数，是在函数调用时使用的参数
	
	/*形参是实参的载体：实参在调用时通过时需要传入到函数内部参与计算(运算),那么需要在函数内部去找到
	实际数据所在的位置才能找到数据本身：需要实际调用的时候，将数据以实参的形式传递给形参：给形参赋值，从而使得函数内部可以*/
	
	//定义函数
	function add($arg1,$arg2){ //形参可以有多个，使用逗号分隔即可
		//函数体：可以直接使用形参运算
		echo $arg1+$arg2; 
	}
	//调用函数
	$num1 = 10;
	//add($num);
	//add($num1,20);//传入的实参，可以是变量或者其他有值得表达式(变量、常量、运算符计算结果)
	
	/*
	 1、系统调用add函数：去内存中寻找是否有add函数：有
	 2、系统会子啊栈区开辟内存空间运行函数add
	 3、系统会查看函数本身是否有形参：有，两个
	 4、系统会判断调用的时候是否有实参：有，两个
	 5、系统默认会将实参的值$num1,20取出顺序赋值给形参：$arg1和$arg2
	 6、执行函数体：运行
	 7、返回函数执行(返回值)
	 * */
	
	/*
	 注意：
	 1、在PHP中允许实参多于形参(个数)：函数内部不用而已
	 2、在PHP中理论上形参个数没有限制(实际开发不会太多)
	 3、实参不能少于形参个数
	 * */
	
	
	
	//引用传值
	/*
	 有的时候，希望在函数内部拿到的外部数据，能够在函数内部改变，
	 那么就需要明确告知函数(定义时)，函数才会在调用的时候去主动获取
	 外部数据的内存地址。以上这种定义形式参数的方式叫做引用传值
	 基本定义：
	 function 函数名(形参1,&形参2){
	 	//函数体
	 }
	 
	 调用的时候，必须给引用传值的参数位置传入实际参数，而且参数本身必须是变量。
	 (变量才有指向的数据的内存地址)
	 * */
	
	function display($a,&$b){
		$a = $a * $a;
		$b = $b * $b;
		echo $a,'<br />',$b,'<br />';
	}
	//定义变量
	$a = 10;
	$b = 5;
	//调用函数
	display($a,$b);
	echo '<hr />',$a,'<br />',$b;
	
	/*
	 引用传值注意事项：在传入实参的时候，必须传入变量
	 * */
?>	